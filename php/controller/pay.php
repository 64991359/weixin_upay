<?php namespace controller;  class pay { public function index($param) { if (!isset($param['money'])) { errmsg("没有传入金额 money 字段");  } if (empty($param['money'])) { errmsg("金额不能为空");  } if (intval($param['money'] * 100) <= 0) { errmsg("金额不能小于等于0");  } if (!isset($param['order_number'])) { errmsg("没有传入订单号 order_number");  } if (empty($param['order_number'])) { errmsg("订单号不能为空");  } if (!isset($param['time'])) { errmsg("没有传入时间戳 time");  } if (empty($param['time'])) { errmsg("time 不能为空");  } if (intval($param['time']) + 90 < time()) { errmsg("请求超时！");  } if (!isset($param['appid'])) { errmsg("没有传入 appid");  } if (empty($param['appid'])) { errmsg("appid 不能为空");  } if (!isset($param['sign'])) { errmsg("没有传入签名 sign");  } if (empty($param['sign'])) { errmsg("sign 不能为空");  } $input = array( 'money' => $param['money'], 'order_number' => $param['order_number'], 'time' => $param['time'], 'appid' => $param['appid'], 'sign' => $param['sign'] );  ksort($input);  $buff = null;  foreach ($input as $k => $v) { if ($k != "sign" && $v != "" && !is_array($v)) { $buff .= $k . "=" . $v . "&";  } } $m = new \lib\model();  $userinfo = $m->find("select * from `user` where appid='{$param['appid']}'");  $appkey = @$userinfo['appkey'];  if (empty($appkey)) { errmsg("用户没有设置appkey");  } $string = $buff . "&key={$appkey}";  $signstr = md5($string);  if ($signstr != $param['sign']) { errmsg("签名错误！");  } $device = $m->find("select * from `device` where `user_id`={$userinfo['id']} and online=1 order by total_today");  if (empty($device) || !$device) { errmsg("没有在线的收款设备");  } $time = time();  $sec = 300;   $orderdata = $m->find("select * from `order` where `order_number`='{$param['order_number']}'");  if ($orderdata && isset($orderdata['qrcode_id']) && !empty($orderdata['qrcode_id'])) { $qrcode_id = $orderdata['qrcode_id'];  $expire = strtotime($orderdata['add_time']) + 120 - $time;  include_once ROOTPATH . 'view/pay.php';  die;  } $sqrcode = $m->find("select * from `qrcode` where lasttime+$sec<$time and money={$param['money']} and `val`!='' and user_id={$userinfo['id']} limit 1");  if ($sqrcode) { $qrcode_id = $sqrcode['id'];  $orderdata = array( 'order_number_sys' => time() - 1540000000 . rand(111, 999), 'order_number' => $param['order_number'], 'money' => $param['money'], 'add_time' => 'now()---', 'status' => '2', 'qrcode_id' => $sqrcode['id'], 'user_id' => $userinfo['id'], 'device_id' => $device['id'], 'note' => @$param['note'] );  $order_id = $m->save($orderdata, 'order');  if (!$order_id) { addlog(array('title' => '请求支付时添加订单失败', 'action' => 'pay/index', 'detail' => 'sql:' . $m->lastsql), $m);  } $expire = $time + 120 - $time;  $m->save(array('lasttime' => $time), "qrcode", "u", "id={$sqrcode['id']}");  include_once ROOTPATH . 'view/pay.php';  die;  } else { if ($orderdata) { $qrcode_id = $orderdata['qrcode_id'];  $expire = strtotime($orderdata['add_time']) + 120 - $time;  } else { $orderdata = array( 'order_number_sys' => time() - 1540000000 . rand(111, 999), 'order_number' => $param['order_number'], 'money' => $param['money'], 'add_time' => 'now()---', 'status' => '2', 'qrcode_id' => '', 'user_id' => $userinfo['id'], 'device_id' => $device['id'], 'note' => @$param['note'] );  $order_id = $m->save($orderdata, 'order');  if (!$order_id) { addlog(array('title' => '请求支付时添加订单失败', 'action' => 'pay/index', 'detail' => 'sql:' . $m->lastsql), $m);  } $qrcodedata = array( 'user_id' => $userinfo['id'], 'device_id' => $device['id'], 'money' => $param['money'], 'lasttime' => $time );  $qrcode_id = $m->save($qrcodedata, 'qrcode');  $m->save(array('qrcode_id' => $qrcode_id), 'order', 'u', "id=$order_id");  $expire = $time + 120 - $time;  } include_once ROOTPATH . 'view/pay.php';  $socket_data = array( 'flag' => 'order', 'wxid' => $device['wxid'], 'mobile' => $device['mobile'], 'data' => array( 'order_number' => $orderdata['order_number_sys'], 'money' => $param['money'], 'qrcode_id' => $qrcode_id ) );  sendsocket($socket_data);  } return ;  } public function getqrcode() { $id = intval(filter_input(INPUT_GET, "id"));  if ($id) { $m = new \lib\model();  $time = time();  $sec = 300;  $paycomlate = $m->field("select status from `order` where `qrcode_id`={$id} and unix_timestamp(add_time)+$sec > $time order by id desc");  if ($paycomlate == 1) { ajax(array('code' => 2, 'val'));  } $val = $m->field("select `val` from `qrcode` where id=$id");  ajax(array('code' => 1, 'val' => base64_encode($val)));  } } public function complate($param) { $m = new \lib\model();  addlog(array('title' => '支付回调', 'action' => 'pay/complate', 'detail' => print_r($param, 1)), $m);  if (!isset($param['sign'])) { errmsg("没有传入签名 sign");  } if (empty($param['sign'])) { errmsg("sign 不能为空");  } if (!isset($param['mobile'])) { errmsg("没有传入 mobile");  } if (empty($param['mobile'])) { errmsg("mobile 不能为空");  } if (!isset($param['rand'])) { errmsg("没有传入 rand");  } if (empty($param['rand'])) { errmsg("rand 不能为空");  } if (!isset($param['data'])) { errmsg("没有传入 data");  } if (empty($param['data'])) { errmsg("data 不能为空");  } $deviceinfo = $m->find("select user_id,id,wxid from `device` where mobile='{$param['mobile']}'");  if(!$deviceinfo){ addlog(['title' => '支付回调时没有找到设备', 'action' => 'pay/complate', 'detail' =>print_r($param, 1)], $m);  } $payment_log['device_id'] = $deviceinfo['id'];  $payment_log['user_id'] = $deviceinfo['user_id'];  $payment_log['rand'] = $param['rand'];  $payment_log['data'] = $param['data'];  $m->save($payment_log, "payment_log");  $logid = mysqli_insert_id($m->link);  if (md5($param['rand'] . $deviceinfo['wxid'] . $param['mobile']) != $param['sign']) { } else { addlog(array('title' => '支付回调：签名失败', 'action' => 'pay/complate', 'detail' => print_r($param, 1)), $m);  } $data = array();  $re_string = preg_replace("/[\r\n|\r|\n]/", " ", $param['data']);  if (preg_match("/.*?收款金额\￥([0-9]{1,9}\.?[0-9]{0,2}).*?/", $re_string, $matches)) { $data['money'] = $matches[1];  } if (preg_match("/.*?收款方备注([0-9]{4,11}).*?/", $re_string, $matches)) { $data['qrcode_id'] = $matches[1];  } if (preg_match("/.*?共计\￥([0-9]{1,9}\.?[0-9]{0,2}).*?/", $re_string, $matches)) { $data['total'] = $matches[1];  } if (preg_match("/.*?今日第([0-9]{1,11})笔收款\，.*?/", $re_string, $matches)) { $data['num'] = $matches[1];  } $m->save($data, "payment_log", 'u', "id=$logid");  $time = time();  $sec = 300;  $select_order_sql = "select id,order_number_sys,order_number,money,status,qrcode_id,user_id,unix_timestamp(add_time) as time from `order` where qrcode_id={$data['qrcode_id']} and unix_timestamp(add_time)+$sec > $time ";  $order = $m->find($select_order_sql);  if ($order) { $res = $m->save(array('status' => 1, 'pay_time' => 'now()---'), "order", "u", "id={$order['id']}");  if ($res) { } else { addlog(array('title' => '支付回调：更新订单失败', 'action' => 'pay/complate', 'detail' => "金额：" . $data['money'], ',二维码：' . $data['qrcode_id'] . ",sql:" . $select_order_sql), $m);  } } else { addlog(array('title' => '支付回调：用户超时支付', 'action' => 'pay/complate', 'detail' => "金额：" . $data['money'], ',二维码：' . $data['qrcode_id'] . ",sql:" . $select_order_sql), $m);  } } } 